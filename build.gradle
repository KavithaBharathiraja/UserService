plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.BOA'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)  // Ensure Java 17 is used
	}
}

repositories {
	mavenCentral()  // Use Maven Central for dependency resolution
}

ext {
	springCloudVersion = "2024.0.0"  // Spring Cloud version for dependency management
}

dependencies {
	// Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok for boilerplate code reduction
	annotationProcessor 'org.projectlombok:lombok'  // Only needed for annotation processing
	compileOnly 'org.projectlombok:lombok'  // Ensure Lombok is in compile-only classpath

	// Spring DevTools for hot reloading
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL Connector as a runtime dependency (using a stable version)
	runtimeOnly 'mysql:mysql-connector-java'

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Optional: Mocking with Mockito (if needed)
	testImplementation 'org.mockito:mockito-core:4.6.1'
}

dependencyManagement {
	imports {
		// Spring Cloud dependency management
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	// Enable JUnit Platform for testing
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'userservice_separate.jar'  // Custom jar file name
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor  // Ensuring Lombok annotations are processed correctly
	}
}
